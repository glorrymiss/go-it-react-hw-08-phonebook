{"version":3,"file":"static/js/495.ad40c8e2.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx","pages/Detals.styled.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  font-size: 26px;\n`;\n\nexport const Button = styled.button`\n  font-size: 18px;\n  width: 110px;\n  background-color: #ffdab9;\n  padding: 4px;\n  border: none;\n  border-radius: 8px;\n  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.12), 2px 4px 4px rgba(0, 0, 0, 0.06),\n    2px 4px 4px rgba(0, 0, 0, 0.16);\n  :hover {\n    background-color: cornsilk;\n  }\n  :active {\n    box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.12);\n  }\n`;\n\nexport const Input = styled.input`\n  font-size: 14px;\n  min-width: 200px;\n  margin-top: 6px;\n  padding: 6px;\n  display: block;\n  border: 3px solid brown;\n  outline: transparent;\n  box-shadow: 2px 2px 1px rgba(0, 5, 5, 0.12);\n`;\n","// export const getContacts = state => state.contacts;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getData = state => state.contacts.contacts.data;\n","import { useState } from 'react';\nimport { Label, Button, Input } from './ContactForm.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getData } from 'redux/contacts/selectors';\nimport { nanoid } from '@reduxjs/toolkit';\n// import { addContacts } from 'redux/contacts';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(getData);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const hendleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const onSubmit = event => {\n    event.preventDefault();\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    } else {\n      dispatch(addContact({ id: nanoid(), name, number }));\n    }\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={hendleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={hendleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  font-size: 22px;\n  display: flex;\n  gap: 30px;\n  font-weight: 500;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Button = styled.button`\n  font-size: 14px;\n  padding: 4px 8px;\n  background-color: #ffdab9;\n  border-radius: 4px;\n  border: none;\n  box-shadow: 2px 2px 1px rgba(0, 5, 5, 0.12), -1px -1px 1px rgba(0, 5, 5, 0.12);\n  :hover {\n    background-color: cornsilk;\n  }\n  :active {\n    background-color: burlywood;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Item, Button } from './ContactItem.styled';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport function ContactItem({ name, number, id }) {\n  const dispatch = useDispatch();\n  return (\n    <Item>\n      {name}: {number}\n      <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </Button>\n    </Item>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import { useEffect } from 'react';\nimport { List } from './ContactList.styled';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContact } from 'redux/contacts/operations';\nimport { getData, getFilter } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getData);\n\n  const filter = useSelector(getFilter);\n  useEffect(() => {\n    dispatch(fetchContact());\n  }, [dispatch]);\n\n  const filterCorrectData = () => {\n    const newNormFilter = filter?.toLowerCase();\n\n    return contacts?.filter(contact =>\n      contact.name?.toLowerCase().includes(newNormFilter)\n    );\n  };\n\n  const filterContacts = filterCorrectData();\n\n  console.log(contacts);\n  console.log(filterContacts);\n  return (\n    <List>\n      {filterContacts?.map(({ id, name, number }) => {\n        return <ContactItem key={id} name={name} number={number} id={id} />;\n      })}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  border: 3px solid brown;\n  outline: transparent;\n  box-shadow: 2px 2px 1px rgba(0, 5, 5, 0.12);\n  padding: 4px;\n  min-width: 160px;\n  font-size: 14px;\n`;\nexport const Title = styled.h2`\n  font-size: 26px;\n  font-weight: 500;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Input, Title } from './Filter.styled';\n\nimport { getFilter } from 'redux/contacts/selectors';\nimport { contactsFilter } from 'redux/contacts/contacts';\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const filterChange = event => {\n    dispatch(contactsFilter(event.currentTarget.value));\n  };\n\n  return (\n    <>\n      <Title>Find contacts by name</Title>\n      <Input type=\"text\" value={filter} name=\"filter\" onChange={filterChange} />\n    </>\n  );\n};\n\nexport default Filter;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { Wrap } from './Detals.styled';\n\nconst Contacts = () => {\n  return (\n    <Wrap>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </Wrap>\n  );\n};\n\nexport default Contacts;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  color: whitesmoke;\n  font-size: 38px;\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  gap: 30px;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const WrapHome = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n"],"names":["Label","styled","Button","Input","getFilter","state","contacts","filter","getData","data","ContactForm","useSelector","dispatch","useDispatch","useState","name","setName","number","setNumber","hendleInputChange","event","currentTarget","value","reset","onSubmit","preventDefault","some","contact","toLowerCase","alert","addContact","id","nanoid","type","onChange","pattern","title","required","List","Item","ContactItem","onClick","deleteContact","ContactList","useEffect","fetchContact","filterContacts","newNormFilter","includes","filterCorrectData","console","log","map","Title","contactsFilter","Wrap","WrapHome"],"sourceRoot":""}