{"version":3,"file":"static/js/649.66a96c6d.chunk.js","mappings":"6PAEaA,EAAOC,EAAAA,EAAAA,KAAH,yHAQJC,EAAQD,EAAAA,EAAAA,MAAH,+JAQLE,EAASF,EAAAA,EAAAA,OAAH,4XAkBNG,EAAQH,EAAAA,EAAAA,GAAH,kEAKLI,EAAQJ,EAAAA,EAAAA,MAAH,sD,SC0BlB,EA9DqB,WACnB,IAAMK,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAcMC,EAAQ,WACZL,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EACD,OACE,iCACE,SAACV,EAAD,UAAO,2BACP,UAACJ,EAAD,CAAMgB,aAAa,MAAMC,SApBR,SAAAC,GACnBA,EAAMC,iBAENb,GACEc,EAAAA,EAAAA,IAAS,CACPX,KAAMA,EACNE,MAAOA,EACPE,SAAUA,KAGdE,GACD,EASG,WACE,UAACb,EAAD,WAAO,YAEL,SAACG,EAAD,CACEgB,KAAK,OACLZ,KAAK,OACLa,YAAY,aACZC,UAAQ,EACRC,SAAU,SAAAN,GAAK,OAAIR,EAAQQ,EAAMO,OAAOC,MAAzB,QAGnB,UAACxB,EAAD,WAAO,SAEL,SAACG,EAAD,CACEgB,KAAK,QACLZ,KAAK,QACLa,YAAY,iBACZC,UAAQ,EACRC,SAAU,SAAAN,GAAK,OAAIN,EAASM,EAAMO,OAAOC,MAA1B,QAGnB,UAACxB,EAAD,WAAO,YAEL,SAACG,EAAD,CACEgB,KAAK,WACLZ,KAAK,WACLc,UAAQ,EACRC,SAAU,SAAAN,GAAK,OAAIJ,EAAYI,EAAMO,OAAOC,MAA7B,QAGnB,SAACvB,EAAD,CAAQkB,KAAK,SAAb,SAAsB,kBAI7B,EC3DD,EAJiB,WACf,OAAO,SAAC,EAAD,GACR,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-top: 30px;\n  width: 400px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  font-size: 24px;\n  justify-content: space-between;\n  border-bottom: 1px solid whitesmoke;\n  color: whitesmoke;\n`;\n\nexport const Button = styled.button`\n  width: 180px;\n  font-size: 16px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(204, 0, 0);\n  color: whitesmoke;\n  border: transparent;\n  border-radius: 8px;\n  transition: background-color 250ms linear;\n  :hover {\n    background-color: orangered;\n  }\n`;\n\nexport const Title = styled.h2`\n  color: whitesmoke;\n  font-size: 32px;\n`;\n\nexport const Input = styled.input`\n  background-color: #f3ffff;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/user/user-operation';\nimport { Button, Form, Input, Label, Title } from './RegisterForm.styled';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    dispatch(\n      register({\n        name: name,\n        email: email,\n        password: password,\n      })\n    );\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <>\n      <Title>Please, register here</Title>\n      <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Label>\n          Username\n          <Input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Elsa Roise\"\n            required\n            onChange={event => setName(event.target.value)}\n          />\n        </Label>\n        <Label>\n          Email\n          <Input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"elsa@gmail.com\"\n            required\n            onChange={event => setEmail(event.target.value)}\n          />\n        </Label>\n        <Label>\n          Password\n          <Input\n            type=\"password\"\n            name=\"password\"\n            required\n            onChange={event => setPassword(event.target.value)}\n          />\n        </Label>\n        <Button type=\"submit\">Register</Button>\n      </Form>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return <RegisterForm />;\n};\n\nexport default Register;\n"],"names":["Form","styled","Label","Button","Title","Input","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","reset","autoComplete","onSubmit","event","preventDefault","register","type","placeholder","required","onChange","target","value"],"sourceRoot":""}